cmake_minimum_required(VERSION 3.0.2)
project(dogm_ros)

# Specify C++14 standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Compiler options (e.g., optimization)
add_compile_options(-O2)

# Find necessary Catkin packages
find_package(catkin REQUIRED COMPONENTS
  geometry_msgs
  nav_msgs
  roscpp
  sensor_msgs
  tf2_ros
  tf2_geometry_msgs
  visualization_msgs
  # Add PCL dependencies
  pcl_ros
  pcl_conversions
)

# Find PCL package directly
find_package(PCL 1.7 REQUIRED)

# Declare Catkin package details
catkin_package(
  INCLUDE_DIRS include        # Export 'include' directory
  CATKIN_DEPENDS geometry_msgs nav_msgs roscpp sensor_msgs tf2_ros tf2_geometry_msgs visualization_msgs pcl_ros pcl_conversions
)

# Specify include directories
include_directories(
  include                     # Package's own include directory
  ${catkin_INCLUDE_DIRS}    # Include directories from Catkin dependencies
  ${PCL_INCLUDE_DIRS}       # PCL include directories
)

# --- Define DOGM Node Executable ---
add_executable(dogm_node
  src/dogm_node.cpp
  src/dynamic_grid_map.cpp
  src/particle_filter.cpp
)

# Link DOGM node against required libraries
target_link_libraries(dogm_node
  ${catkin_LIBRARIES}
  ${PCL_LIBRARIES}
)
# --- End DOGM Node ---


# --- [NEW] Define Radar Visualization Node Executable ---
add_executable(radar_velocity_viz_node
  src/radar_velocity_viz.cpp
)

# Link Radar Viz node against required libraries
target_link_libraries(radar_velocity_viz_node
  ${catkin_LIBRARIES}
  ${PCL_LIBRARIES}
)
# --- [END NEW] ---


# --- Installation Rules ---
# Install both executables
install(TARGETS dogm_node radar_velocity_viz_node
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

# Install config, launch, and rviz files
install(DIRECTORY config launch rviz
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)
# --- End Installation ---